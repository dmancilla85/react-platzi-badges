{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Proyectos\\\\react\\\\platzi-badges\\\\src\\\\pages\\\\BadgeDetailsContainer.js\";\nimport React from \"react\";\nimport PageLoading from \"../components/PageLoading\";\nimport PageError from \"../components/PageError\";\nimport api from \"../api\";\nimport BadgeDetails from \"./BadgeDetails\";\nexport default class BadgeDetailsContainer extends React.Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      loading: true,\n      error: null,\n      data: undefined,\n      modalIsOpen: false\n    };\n    this.fetchData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this.setState({\n              loading: true,\n              error: null\n            });\n\n            _context.prev = 1;\n            _context.next = 4;\n            return api.badges.read(_this.props.match.params.badgeId);\n\n          case 4:\n            data = _context.sent;\n\n            _this.setState({\n              loading: false,\n              data: data\n            });\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n            _this.setState({\n              loading: false,\n              error: _context.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    this.handleDeleteBadge = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              try {\n                api.badges.remove(_this.props.match.params.badgeId);\n              } catch (error) {}\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.handleOpenModal = e => {\n      this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    this.handleCloseModal = e => {\n      this.setState({\n        modalIsOpen: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(PageError, {\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(BadgeDetails, {\n      onCloseModal: this.handleCloseModal,\n      onDeleteBadge: this.handleDeleteBadge,\n      onOpenModal: this.handleOpenModal,\n      modalIsOpen: this.state.modalIsOpen,\n      badge: this.state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Proyectos/react/platzi-badges/src/pages/BadgeDetailsContainer.js"],"names":["React","PageLoading","PageError","api","BadgeDetails","BadgeDetailsContainer","Component","state","loading","error","data","undefined","modalIsOpen","fetchData","setState","badges","read","props","match","params","badgeId","handleDeleteBadge","e","remove","handleOpenModal","handleCloseModal","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PageLoading from \"../components/PageLoading\";\r\nimport PageError from \"../components/PageError\";\r\nimport api from \"../api\";\r\nimport BadgeDetails from \"./BadgeDetails\";\r\n\r\nexport default class BadgeDetailsContainer extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    error: null,\r\n    data: undefined,\r\n    modalIsOpen: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData = async () => {\r\n    this.setState({ loading: true, error: null });\r\n\r\n    try {\r\n      const data = await api.badges.read(this.props.match.params.badgeId);\r\n      this.setState({ loading: false, data: data });\r\n    } catch (error) {\r\n      this.setState({ loading: false, error: error });\r\n    }\r\n  };\r\n\r\n  handleDeleteBadge = async (e) => {\r\n    this.setState({ loading: true, error: null });\r\n\r\n    try {\r\n      api.badges.remove(this.props.match.params.badgeId);\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleOpenModal = (e) => {\r\n    this.setState({ modalIsOpen: true });\r\n  };\r\n\r\n  handleCloseModal = (e) => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <PageLoading />;\r\n    }\r\n\r\n    if (this.state.error) {\r\n      return <PageError error={this.state.error} />;\r\n    }\r\n\r\n    return (\r\n      <BadgeDetails\r\n        onCloseModal={this.handleCloseModal}\r\n        onDeleteBadge={this.handleDeleteBadge}\r\n        onOpenModal={this.handleOpenModal}\r\n        modalIsOpen={this.state.modalIsOpen}\r\n        badge={this.state.data}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}