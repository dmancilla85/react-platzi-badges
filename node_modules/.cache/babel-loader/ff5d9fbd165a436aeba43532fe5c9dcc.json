{"ast":null,"code":"import _slicedToArray from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Proyectos\\\\react\\\\platzi-badges\\\\src\\\\components\\\\BadgesList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/BadgesList.css\";\nimport Gravatar from \"./Gravatar\";\n\nclass BadgesListItem extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BadgesListItem\",\n      children: [/*#__PURE__*/_jsxDEV(Gravatar, {\n        className: \"BadgesListItem__avatar\",\n        email: this.props.badge.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [this.props.badge.firstName, \" \", this.props.badge.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), \"@\", this.props.badge.twitter, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), this.props.badge.jobTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction useSearchBadges(badges) {\n  _s();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        query = _React$useState2[0],\n        setQuery = _React$useState2[1];\n\n  const _React$useState3 = React.useState(badges),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        filteredBadges = _React$useState4[0],\n        setFilteredBadges = _React$useState4[1];\n\n  React.useMemo(() => {\n    const result = badges.filter(badge => {\n      return \"\".concat(badge.firstName, \" \").concat(badge.lastName).toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredBadges(result);\n  }, [badges, query]);\n  return {\n    query,\n    setQuery,\n    filteredBadges\n  };\n}\n\n_s(useSearchBadges, \"Myoi00Cdt9oF8zof7k0/SXInRBw=\");\n\nfunction BadgesList(props) {\n  _s2();\n\n  const badges = props.badges;\n\n  const _useSearchBadges = useSearchBadges(badges),\n        query = _useSearchBadges.query,\n        setQuery = _useSearchBadges.setQuery,\n        filteredBadges = _useSearchBadges.filteredBadges;\n\n  if (filteredBadges.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter Badges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: query,\n          onChange: e => {\n            setQuery(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No badges were found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary\",\n        to: \"/badges/new\",\n        children: \"Create new badge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BadgesList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter Badges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: query,\n        onChange: e => {\n          setQuery(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: filteredBadges.map(badge => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"text-reset text-decoration-none\",\n            to: \"/badges/\".concat(badge.id),\n            children: /*#__PURE__*/_jsxDEV(BadgesListItem, {\n              badge: badge\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, badge.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(BadgesList, \"oegjkv1yeHXoWL9ZOMJcVGwzj2s=\", false, function () {\n  return [useSearchBadges];\n});\n\n_c = BadgesList;\nexport default BadgesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BadgesList\");","map":{"version":3,"sources":["C:/Proyectos/react/platzi-badges/src/components/BadgesList.js"],"names":["React","Link","Gravatar","BadgesListItem","Component","render","props","badge","email","firstName","lastName","twitter","jobTitle","useSearchBadges","badges","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","toLowerCase","includes","BadgesList","length","e","target","value","map","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./styles/BadgesList.css\";\r\nimport Gravatar from \"./Gravatar\";\r\n\r\nclass BadgesListItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BadgesListItem\">\r\n        <Gravatar\r\n          className=\"BadgesListItem__avatar\"\r\n          email={this.props.badge.email}\r\n        />\r\n\r\n        <div>\r\n          <strong>\r\n            {this.props.badge.firstName} {this.props.badge.lastName}\r\n          </strong>\r\n          <br />@{this.props.badge.twitter}\r\n          <br />\r\n          {this.props.badge.jobTitle}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction useSearchBadges(badges) {\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const [filteredBadges, setFilteredBadges] = React.useState(badges);\r\n\r\n  React.useMemo(() => {\r\n    const result = badges.filter((badge) => {\r\n      return `${badge.firstName} ${badge.lastName}`\r\n        .toLowerCase()\r\n        .includes(query.toLowerCase());\r\n    });\r\n\r\n    setFilteredBadges(result);\r\n  }, [badges, query]);\r\n\r\n  return { query, setQuery, filteredBadges };\r\n}\r\n\r\nfunction BadgesList(props) {\r\n  const badges = props.badges;\r\n\r\n  const { query, setQuery, filteredBadges } = useSearchBadges(badges);\r\n\r\n  if (filteredBadges.length === 0) {\r\n    return (\r\n      <div>\r\n        <div className=\"form-group\">\r\n          <label>Filter Badges</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={query}\r\n            onChange={(e) => {\r\n              setQuery(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <h3>No badges were found</h3>\r\n        <Link className=\"btn btn-primary\" to=\"/badges/new\">\r\n          Create new badge\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"BadgesList\">\r\n      <div className=\"form-group\">\r\n        <label>Filter Badges</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={query}\r\n          onChange={(e) => {\r\n            setQuery(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <ul className=\"list-unstyled\">\r\n        {filteredBadges.map((badge) => {\r\n          return (\r\n            <li key={badge.id}>\r\n              <Link\r\n                className=\"text-reset text-decoration-none\"\r\n                to={`/badges/${badge.id}`}\r\n              >\r\n                <BadgesListItem badge={badge} />\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BadgesList;\r\n"]},"metadata":{},"sourceType":"module"}