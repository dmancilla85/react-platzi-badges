{"ast":null,"code":"import _regeneratorRuntime from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nconst BASE_URL = \"http://localhost:3001\";\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst randomNumber = (min = 0, max = 1) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nconst simulateNetworkLatency = (min = 30, max = 1500) => delay(randomNumber(min, max));\n\nfunction callApi(_x) {\n  return _callApi.apply(this, arguments);\n}\n\nfunction _callApi() {\n  _callApi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint, options = {}) {\n    var url, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return simulateNetworkLatency();\n\n        case 2:\n          options.headers = {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          };\n          url = BASE_URL + endpoint;\n          _context.next = 6;\n          return fetch(url, options);\n\n        case 6:\n          response = _context.sent;\n          _context.next = 9;\n          return response.json();\n\n        case 9:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _callApi.apply(this, arguments);\n}\n\nconst api = {\n  badges: {\n    list() {\n      return callApi(\"/badges\");\n    },\n\n    create(badge) {\n      return callApi(\"/badges\", {\n        method: \"POST\",\n        body: JSON.stringify(badge)\n      });\n    },\n\n    read(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId));\n    },\n\n    update(badgeId, updates) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: \"PUT\",\n        body: JSON.stringify(updates)\n      });\n    },\n\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: \"DELETE\"\n      });\n    }\n\n  }\n};\nexport default api;","map":{"version":3,"sources":["C:/Proyectos/react/platzi-badges/src/api.js"],"names":["BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","options","headers","Accept","url","fetch","response","json","data","api","badges","list","create","badge","method","body","JSON","stringify","read","badgeId","update","updates","remove"],"mappings":";;AAAA,MAAMA,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAtB;;AACA,MAAMI,YAAY,GAAG,CAACC,GAAG,GAAG,CAAP,EAAUC,GAAG,GAAG,CAAhB,KACnBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GADhD;;AAEA,MAAMK,sBAAsB,GAAG,CAACL,GAAG,GAAG,EAAP,EAAWC,GAAG,GAAG,IAAjB,KAC7BP,KAAK,CAACK,YAAY,CAACC,GAAD,EAAMC,GAAN,CAAb,CADP;;SAGeK,O;;;;;sEAAf,iBAAuBC,QAAvB,EAAiCC,OAAO,GAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACQH,sBAAsB,EAD9B;;AAAA;AAGEG,UAAAA,OAAO,CAACC,OAAR,GAAkB;AAChB,4BAAgB,kBADA;AAEhBC,YAAAA,MAAM,EAAE;AAFQ,WAAlB;AAKMC,UAAAA,GARR,GAQclB,QAAQ,GAAGc,QARzB;AAAA;AAAA,iBASyBK,KAAK,CAACD,GAAD,EAAMH,OAAN,CAT9B;;AAAA;AASQK,UAAAA,QATR;AAAA;AAAA,iBAUqBA,QAAQ,CAACC,IAAT,EAVrB;;AAAA;AAUQC,UAAAA,IAVR;AAAA,2CAYSA,IAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,MAAMC,GAAG,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,GAAG;AACL,aAAOZ,OAAO,CAAC,SAAD,CAAd;AACD,KAHK;;AAINa,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,aAAOd,OAAO,YAAY;AACxBe,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAFkB,OAAZ,CAAd;AAID,KATK;;AAUNK,IAAAA,IAAI,CAACC,OAAD,EAAU;AACZ,aAAOpB,OAAO,mBAAYoB,OAAZ,EAAd;AACD,KAZK;;AAaNC,IAAAA,MAAM,CAACD,OAAD,EAAUE,OAAV,EAAmB;AACvB,aAAOtB,OAAO,mBAAYoB,OAAZ,GAAuB;AACnCL,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,OAAf;AAF6B,OAAvB,CAAd;AAID,KAlBK;;AAmBN;AACAC,IAAAA,MAAM,CAACH,OAAD,EAAU;AACd,aAAOpB,OAAO,mBAAYoB,OAAZ,GAAuB;AACnCL,QAAAA,MAAM,EAAE;AAD2B,OAAvB,CAAd;AAGD;;AAxBK;AADE,CAAZ;AA6BA,eAAeL,GAAf","sourcesContent":["const BASE_URL = \"http://localhost:3001\";\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max));\r\n\r\nasync function callApi(endpoint, options = {}) {\r\n  await simulateNetworkLatency();\r\n\r\n  options.headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  };\r\n\r\n  const url = BASE_URL + endpoint;\r\n  const response = await fetch(url, options);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n\r\nconst api = {\r\n  badges: {\r\n    list() {\r\n      return callApi(\"/badges\");\r\n    },\r\n    create(badge) {\r\n      return callApi(`/badges`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(badge),\r\n      });\r\n    },\r\n    read(badgeId) {\r\n      return callApi(`/badges/${badgeId}`);\r\n    },\r\n    update(badgeId, updates) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updates),\r\n      });\r\n    },\r\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\r\n    remove(badgeId) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}