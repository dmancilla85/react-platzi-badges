{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/Proyectos/react/platzi-badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Proyectos\\\\react\\\\platzi-badges\\\\src\\\\pages\\\\BadgeEdit.js\";\nimport React from \"react\";\nimport \"./styles/BadgeEdit.css\";\nimport header from \"../images/platziconf-logo.svg\";\nimport Badge from \"../components/Badge\";\nimport BadgeForm from \"../components/BadgeForm\";\nimport PageLoading from \"../components/PageLoading\";\nimport api from \"../api\";\n\nclass BadgeEdit extends React.Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      form: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        jobTitle: \"\",\n        twitter: \"\"\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        form: _objectSpread(_objectSpread({}, this.state.form), {}, {\n          [e.target.name]: e.target.value\n        })\n      });\n    };\n\n    this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return api.badges.update(_this.props.match.params.badgeId, _this.state.form);\n\n            case 5:\n              _this.setState({\n                loading: false\n              });\n\n              _this.props.history.push(\"/badges\");\n\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return api.badges.read(_this.props.match.params.badgeId);\n\n            case 4:\n              data = _context2.sent;\n\n              _this.setState({\n                loading: false,\n                form: data\n              });\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                error: _context2.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(PageLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BadgeEdit__hero\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"BadgeEdit__hero-image img-fluid\",\n          src: header,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              firstName: this.state.form.firstName || \"FIRST_NAME\",\n              lastName: this.state.form.lastName || \"LAST_NAME\",\n              twitter: this.state.form.twitter || \"twitter\",\n              email: this.state.form.email || \"EMAIL\",\n              jobTitle: this.state.form.jobTitle || \"JOB_TITLE\",\n              avatarUrl: \"https://www.gravatar.com/avatar/avatar?d=identicon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), \",\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Edit Attendant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BadgeForm, {\n              onChange: this.handleChange,\n              onSubmit: this.handleSubmit,\n              formValues: this.state.form,\n              error: this.state.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BadgeEdit;","map":{"version":3,"sources":["C:/Proyectos/react/platzi-badges/src/pages/BadgeEdit.js"],"names":["React","Badge","BadgeForm","PageLoading","api","BadgeEdit","Component","state","form","firstName","lastName","email","jobTitle","twitter","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","loading","error","badges","update","props","match","params","badgeId","history","push","fetchData","read","data","componentDidMount","render","header"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./styles/BadgeEdit.css\";\r\nimport header from \"../images/platziconf-logo.svg\";\r\nimport Badge from \"../components/Badge\";\r\nimport BadgeForm from \"../components/BadgeForm\";\r\nimport PageLoading from \"../components/PageLoading\";\r\nimport api from \"../api\";\r\n\r\nclass BadgeEdit extends React.Component {\r\n  state = {\r\n    form: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      jobTitle: \"\",\r\n      twitter: \"\",\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Handle para cambios de los atributos del formulario.\r\n   * @param {Object} e - evento de cambio capturado\r\n   */\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      form: {\r\n        // Para mantener el estado actual del form\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true, error: null });\r\n\r\n    try {\r\n      await api.badges.update(this.props.match.params.badgeId, this.state.form);\r\n      this.setState({ loading: false });\r\n      this.props.history.push(\"/badges\");\r\n    } catch (error) {\r\n      this.setState({ loading: false, error: error });\r\n    }\r\n  };\r\n\r\n  fetchData = async (e) => {\r\n    this.setState({\r\n      loading: true,\r\n      error: null,\r\n    });\r\n\r\n    try {\r\n      const data = await api.badges.read(this.props.match.params.badgeId);\r\n      this.setState({ loading: false, form: data });\r\n    } catch (error) {\r\n      this.setState({ loading: false, error: error });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <PageLoading />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"BadgeEdit__hero\">\r\n          <img\r\n            className=\"BadgeEdit__hero-image img-fluid\"\r\n            src={header}\r\n            alt=\"Logo\"\r\n          />\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <Badge\r\n                firstName={this.state.form.firstName || \"FIRST_NAME\"}\r\n                lastName={this.state.form.lastName || \"LAST_NAME\"}\r\n                twitter={this.state.form.twitter || \"twitter\"}\r\n                email={this.state.form.email || \"EMAIL\"}\r\n                jobTitle={this.state.form.jobTitle || \"JOB_TITLE\"}\r\n                avatarUrl=\"https://www.gravatar.com/avatar/avatar?d=identicon\"\r\n              />\r\n              ,\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <h1>Edit Attendant</h1>\r\n              <BadgeForm\r\n                onChange={this.handleChange}\r\n                onSubmit={this.handleSubmit}\r\n                formValues={this.state.form}\r\n                error={this.state.error}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BadgeEdit;\r\n"]},"metadata":{},"sourceType":"module"}